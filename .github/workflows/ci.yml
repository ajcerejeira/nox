name: CI
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: Install nox
        run: |
          python -m pip install --disable-pip-version-check --upgrade --user pip setuptools
          python -m pip install .
      - name: Run tests on ${{ matrix.os }}
        run: nox --non-interactive --session "tests-${{ matrix.python-version }}"
        env:
          SETUPTOOLS_USE_DISTUTILS: stdlib
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install nox
        run: |
          python -m pip install --disable-pip-version-check --upgrade --user pip setuptools
          python -m pip install .
      - name: Lint
        run: nox --non-interactive --session "lint"
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install nox
        run: |
          python -m pip install --disable-pip-version-check --upgrade --user pip setuptools
          python -m pip install .
      - name: Docs
        run: nox --non-interactive --session "docs"
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install setuptools and wheel
        run: python -m pip install --upgrade --user setuptools wheel
      - name: Build sdist and wheel
        run: python setup.py sdist bdist_wheel
      - name: Publish distribution PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
